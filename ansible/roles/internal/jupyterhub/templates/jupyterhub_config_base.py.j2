# {{ ansible_managed }}
{% block global %}
import os
from subprocess import check_call

def create_fs_hook(spawner):
    username = spawner.user.name
    callysto_user = 'jupyter'
    check_call(['/opt/syzygy/authenticator/zfs-homedir.sh', username, callysto_user])

{% for global_option in jupyterhub_global_options %}
c.{{ global_option.conf_object }} = {{ global_option.value }}
{% endfor %}

{% if jupyterhub_global_options_extra is defined %}
{% for global_option in jupyterhub_global_options_extra %}
c.{{ global_option.conf_object }} = {{ global_option.value }}
{% endfor %}
{% endif %}

{% endblock %}

{% block spawner %}
{% if jupyterhub_spawner in jupyterhub_spawners %}
c.JupyterHub.spawner_class = '{{ jupyterhub_spawners[jupyterhub_spawner].name }}'
{% if 'options' in jupyterhub_spawners[jupyterhub_spawner] %}
{% for spawner_option in jupyterhub_spawners[jupyterhub_spawner].options %}
c.{{ spawner_option.conf_object }} = {{ spawner_option.value }}
{% endfor %}
{% endif %}
{% endif %}
{% endblock %}

{% block authenticator %}
{% if jupyterhub_authenticator in jupyterhub_authenticators %}
c.JupyterHub.authenticator_class = '{{ jupyterhub_authenticators[jupyterhub_authenticator].name }}'
{% if 'options' in jupyterhub_authenticators[jupyterhub_authenticator] %}
{% for authenticator_option in jupyterhub_authenticators[jupyterhub_authenticator].options %}
c.{{ authenticator_option.conf_object }}  = {{ authenticator_option.value }}
{% endfor %}
{% endif %}
{% endif %}
{% endblock %}
